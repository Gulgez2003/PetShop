@{
    ViewData["Title"] = "Favourite Page";
}

@model List<FavouriteItemVM>

<div class="container-fluid py-5">
    <div class="container">
        <section class="h-100" style="background-color: #eee;">
            <div class="container h-100 py-5">
                <div class="row d-flex justify-content-center align-items-center h-100">
                    <div class="col-10">

                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h3 class="fw-normal mb-0 text-black">Favourites</h3>
                        </div>

                        @foreach (var item in Model)
                        {
                            <div class="card rounded-3 mb-4" data-favourite-id="@item.Id">
                                <div class="card-body p-4">
                                    <div class="row d-flex justify-content-between align-items-center">
                                        <div class="col-md-2 col-lg-2 col-xl-2">
                                            <img src="~/assets/img/@item.ImageName"
                                             class="img-fluid rounded-3" alt="Product">
                                        </div>
                                        <div class="col-md-3 col-lg-3 col-xl-3">
                                            <p class="lead fw-normal mb-2">@item.Name</p>
                                            <p><span class="text-muted">@item.Title</p>
                                        </div>
                                        <div class="col-md-1 col-lg-1 col-xl-1 text-end">
                                            <button class="btn btn-outline-primary submitBasketBtn" data-basket-id="@item.Id" data-product-name="@item.Name">
                                                <i class="fa-solid fa-cart-shopping"></i>
                                            </button>
                                        </div>
                                        <div class="col-md-1 col-lg-1 col-xl-1 text-end">
                                            <button class="btn btn-outline-danger deleteBtn" data-favourite-id="@item.Id">
                                                <i class="fa fa-trash" aria-hidden="true"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                        <div class="d-flex justify-content-end">
                            <a type="button" asp-controller="Product" asp-action="Index" class="btn btn-outline-dark btn-lg me-2">Continue shopping</a>
                        </div>

                    </div>
                </div>
            </div>
        </section>
    </div>
</div>



<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>

    const deleteBtns = document.querySelectorAll(".deleteBtn");

    deleteBtns.forEach((btn) => {
        btn.addEventListener("click", (event) => {
            event.preventDefault();
            const id = btn.getAttribute("data-favourite-id");
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "GET",
                        url: `/Basket/Delete/${id}`,
                        success: function (data) {
                            if (data.status === 200) {
                                Swal.fire(
                                    'Deleted!',
                                    'Your file has been deleted.',
                                    'success'
                                );
                                // Удалите строку из таблицы и обновите порядковые номера
                                $(`div[data-favourite-id="${id}"]`).remove();

                            } else {
                                Swal.fire(
                                    'Error',
                                    'An error occurred while deleting the item.',
                                    'error'
                                );
                            }
                        },
                        error: function () {
                            Swal.fire(
                                'Error',
                                'An error occurred while deleting the item.',
                                'error'
                            );
                        }
                    });
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    Swal.fire(
                        'Cancelled',
                        "Your file has not been deleted.",
                        'error'
                    );
                }
            });
        });
    });


    $(document).ready(function () {
        $(".submitBasketBtn").click(function () {
            // Получите информацию о продукте из атрибутов данных кнопки
            const productId = $(this).data("basket-id");
            const productName = $(this).data("product-name");

            // Выполните AJAX-запрос
            $.ajax({
                url: "/Basket/AddToBasket/${productId}",
                type: "GET",
                data: {
                    productId: productId
                },
                success: function (data) {
                    // Обработка успешного ответа
                    Swal.fire({
                        position: 'top-end',
                        icon: 'success',
                        title: productName + ' has been added to the Basket',
                        showConfirmButton: false,
                        timer: 2000
                    });
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    // Обработка ошибки
                    console.log("AJAX Error: " + textStatus, errorThrown);
                    Swal.fire({
                        position: 'top-end',
                        icon: 'error',
                        title: 'Failed to add ' + productName + ' to the Basket',
                        showConfirmButton: false,
                        timer: 3000
                    });
                }
            });

        });
    });
</script>